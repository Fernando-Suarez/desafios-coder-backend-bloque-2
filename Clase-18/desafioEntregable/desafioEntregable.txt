Consigna: Utilizando Mongo Shell, crear una base de datos llamada ecommerce que contenga dos colecciones: mensajes y productos.

1 - Agregar 10 documentos con valores distintos a las colecciones mensajes y productos. El formato de los documentos debe estar en correspondencia con el que venimos utilizando en el entregable con base de datos MariaDB. 
2 - Definir las claves de los documentos en relación a los campos de las tablas de esa base. En el caso de los productos, poner valores al campo precio entre los 100 y 5000 pesos(eligiendo valores intermedios, ej: 120, 580, 900, 1280, 1700, 2300, 2860, 3350, 4320, 4990). 
3 - Listar todos los documentos en cada colección.
4 - Mostrar la cantidad de documentos almacenados en cada una de ellas.
5 - Realizar un CRUD sobre la colección de productos:
a)Agregar un producto más en la colección de productos 
b)Realizar una consulta por nombre de producto específico:
    Listar los productos con precio menor a 1000 pesos.
    Listar los productos con precio entre los 1000 a 3000 pesos.
    Listar los productos con precio mayor a 3000 pesos.
    Realizar una consulta que traiga sólo el nombre del tercer producto más barato.
c)Hacer una actualización sobre todos los productos, agregando el campo stock a todos ellos con un valor de 100.
d)Cambiar el stock a cero de los productos con precios mayores a 4000 pesos. 
e)Borrar los productos con precio menor a 1000 pesos 
6 - Crear un usuario 'pepe' clave: 'asd456' que sólo pueda leer la base de datos ecommerce. Verificar que pepe no pueda cambiar la información.


Resolucion:
                                                // punto 1 y 2 //

use ecommerce


db.productos.insertMany([{nombre: 'producto 1', precio: 100, categoria: 'ps4', thumbnail:'www.google.com'},{nombre: 'producto 2', precio: 500, categoria: 'ps4', thumbnail:'www.google.com'},{nombre: 'producto 3', precio: 1000, categoria: 'ps4', thumbnail:'www.google.com'},{nombre: 'producto 4', precio: 1500, categoria: 'ps4', thumbnail:'www.google.com'},{nombre: 'producto 5', precio: 2000, categoria: 'ps4', thumbnail:'www.google.com'},{nombre: 'producto 6', precio: 2500, categoria: 'ps4', thumbnail:'www.google.com'},{nombre: 'producto 7', precio: 3000, categoria: 'ps4', thumbnail:'www.google.com'},{nombre: 'producto 8', precio: 3500, categoria: 'ps4', thumbnail:'www.google.com'},{nombre: 'producto 9', precio: 4000, categoria: 'ps4', thumbnail:'www.google.com'},{nombre: 'producto 10', precio: 4500, categoria: 'ps4', thumbnail:'www.google.com'}])

db.mensajes.insertMany([{email: 'hola@hola.com', mensaje:'asdasd'},{email:'chau@chau.com' , mensaje:'asdasd'},{email:'hola@hola.com' , mensaje:'asdasd'},{email:'chau@chau.com' , mensaje:'asdasd'},{email:'hola@hola.com' , mensaje:'asdasd'},{email:'chau@chau.com' , mensaje:'asdasd'},{email:'hola@hola.com' , mensaje:'asdasd'},{email:'chau@chau.com' , mensaje:'asdasd'},{email:'hola@hola.com' , mensaje:'asdasd'},{email:'chau@chau.com' , mensaje:'asdasd'}])


                                                // punto 3 //


db.productos.find().pretty()

db.mensajes.find().pretty()

                                                // punto 4  //

db.productos.estimatedDocumentCount()

db.mensajes.estimatedDocumentCount()


                                                // punto 5.A  //

db.productos.insertOne({nombre: 'producto 11', precio: 5000, categoria: 'ps4', thumbnail:'www.google.com'})

                                                // punto 5.B  //

db.productos.find({'precio':{$lt: 1000}})

db.productos.find({$and: [{precio:{$gte:1000}},{precio:{$lte:3000}}]})

db.productos.find({'precio':{$gt: 3000}})

db.productos.find({},{nombre:1,_id:0}).sort({precio:1}).limit(1).skip(2)


                                                // punto 5.C  //

db.productos.updateMany({},{$set: {stock:100}},{upsert: true})


                                                // punto 5.D


db.productos.updateMany({precio:{$gt:4000}},{$set: {stock:0}},{upsert: true})


                                                // punto 5.E)
 db.productos.deleteMany({precio:{$lt:1000}})


                                                // punto 6

 db.createUser({user: 'pepe', pwd:'asd456',roles:[{role:'read',db:'ecommerce'}]})

 // parar el servidor y entrar con la flag auth

 mongod --dbpath d:\testmongo --auth

 // ingresar a la shel de mongod

 mongo -u pepe -p asd456

 use ecommerce

 db.productos.find().pretty()

 // intenetamos ingresar un nuevo documentos

 db.productos.insertOne({nombre: 'producto 12'})

 //larga error porque no tenemos autorizacion



